# Desafio Softville Zero2One: Descobrir a Palavra-chave [05-04-19].
# Por André Fossile.

#Incializando a variável "desafio" com o texto/string embaralhado
desafio = ("u9wlcn1cj3ej3u9d74kmylhm077mpj3f44k1m2hvz\n"
           "\n"
           "j3xep2vgbbox4kn4kf4o8g5h4kvzxr4kmha828gha\n"
           "\n"
           "8hpnnzh_8gzhe3l4kapd_nxu9rbj35gq1b0cct9qg\n"
           "\n"
           "77g4ks2drzgt9xvhi6qvf4vi65nu9qzgohvi6lw2y\n"
           "\n"
           "xpu9qj3llu9e35cpx27cba1pt9noxbglp4khsvvwd\n"
           "\n"
           "0gami6nprrha8_u9mwd1e3p5nngt9xg4kqx8_f4lr\n"
           "\n"
           "0kbnn1z5zcv0nh8_salov2rpuumr0m7ai6zj3e3dv\n"
           "\n"
           "1vht9bdj3e3lf4rb25knpqi6nxqi6ozzpdrv8_bw5\n"
           "\n"
           "b6l1umj3c8_oqt9c2grmxkwk0155czhhqwuqzo7zn\n"
           "\n"
           "qgf4m1b6dxrxi6g2vkb6ypb65yb6anuccpse3zgv_\n"
           "\n"
           "dvt9yb62b6r5b6rb60ldb6pi6y2hgzkpt9loxf4k1\n"
           "\n"
           "t9rzk27j3mdhppuca05ohf4ne3hdnlnhe3xwj3_yh\n"
           "\n"
           "ulslwpdrgj3sy_f44kqcd24kb6ywhqxp0j3vv_qbs\n"
           "\n"
           "1c4knxre3w_i6vgvpol405mqf44ky5xoxzuyqct9r\n"
           "\n"
           "iyxcncwvvqhd2u9p04k1ggu9e38_zbcre3xbt94kc\n"
           "\n"
           "sbnj3czqoq_wr4kt9pscl41zrme3y5bxpzryl4f4y\n"
           "\n"
           "dknd_zbj3j3qcnu92bpj3ba1e3cu90xbprj3j3j3c\n"
           "\n"
           "ybvcgh5f4bcv5njic3pl41iwzkqvw_hl4oy5nyjrm\n"
           "\n"
           "iqvu9bsybe3t9kl4nsgv2wqt9rf4crirs0y1wdvb3\n"
           "\n"
           "p7wn555h3t9ju9g_ngl4xam6sy1bko3p_gnk5dvgz\n"
           "\n"
           "3p_cm6yxcl4rt9jt9h3niu9szzbnkkn_h30_e1nb7\n"
           "\n"
           "ou9xv53pu95o2t9cjbex_vpqb8wyjgczobc5irm6g\n"
           "\n"
           "f4v8wnl4rxaryl44t9dl44z8wg1cp__i8wu9_vk9_\n"
           "\n"
           "kzkm65k7l4l4o15eix2r0xym6lvyvt9lf4y5yd8wt\n"
           "\n"
           "9zxugr5hx8wqgm6m6s8v2tshrubly1pevlpg7lllu\n"
           "\n"
           "m5bscjuv_cbtf4jpnr0ervyx7tbr6xa5qsq_9_bo6\n"
           "\n"
           "iiub5qmg8wtvz6x2ln6x6xys8kb8w7qu5zt1epk9_\n"
           "\n"
           "ugguk7ayhr02icrdp5cnrhmlucqzb72vo6js8e16x\n"
           "\n"
           "vbzrccyqju2ufbi9_s8io6vpb7hhqz5k1cmm9_8wt\n"
           "\n"
           "zi9_d9_em7t20k6x5p1kpqftqjrhiiuvyijt8wrmj\n"
           "\n"
           "9_r9_nls84aqemp9_yph3_mu5r1lm84w784wibz6x\n"
           "\n"
           "nrld_fracudo66x784w5s840q5m2jkdvbfbnmk2vk\n"
           "\n"
           "tr7k1yyct_84wymz6xswtd_dvsjviugj7jvs17wl2\n"
           "\n"
           "ltkfr7lv6xkzb5qkzr0jvvu5uz27kpcvvrc_o6e12\n"
           "\n"
           "ryyua7s5ilqpwr3zkyrsbskjny11wid7kcfj2k284\n"
           "\n"
           "wqu84tri2h3usq84tq_b0jysid84wv2p7mh3o63z2\n"
           "\n"
           "6xc7sacpe4h3ceplbi4h3gnuaucvatjprbffl73zf\n"
           "\n"
           "yyr2ndr6x5q__7pt6xkcb4h34h30slnu5u784wljw\n"
           "\n"
           "84xb2xzb092u5jntz84teb7rknnff4h3l_cvxo6w8\n"
           "\n"
           "4d8tpxldvso6n4h3nfx7x92nmw80o6pu_8tg792o6\n"
           "\n"
           "s1o6f4h34h0j4hm92xk1dn7vo6r9w892lsxy_cles\n"
           "\n"
           "bno6nd7r9gxf_bzipudfo6n8t4hlclvn4hu7w81mr\n"
           "\n"
           "992bjkr9yo6aw8oz_8ttftltix4h54h1d_q3otq3m\n"
           "\n"
           "ye924hlulp92ffq3mug4hpxxsyevnci4nymjs04n4\n"
           "\n"
           "ndir9f92g_jjcltmgp4hlp792udr91jviixlx9204\n"
           "\n"
           "npw8vr9bq3y7gvu4h92osk4htv_pq34nyzmjymr9p\n"
           "\n"
           "4np14hebxq37fpm0kfhzir9ot07xyvclcr9_zc0r9\n"
           "\n"
           "8tsakfu7sy111yujzdjgiz04ngmo4n70ogw8k4njc\n"
           "\n"
           "4ndlpvk8tg4n8tg927ajm5zw8c9254nkh0ggmhz92\n"
           "\n"
           "ijyr9p0bkpdcr95iby8tey7q30chl92ldzee1lebq\n"
           "\n"
           "37jplphcdgptdelzkhxpxq30clexvlc65jiys07sg\n"
           "\n"
           "s1gmsa7dd920cl65gm1se_e65ubvms7cpjw8scw89\n"
           "\n"
           "2e7065gq3dxvv65h_zut0ea65uydayapfamxilyug\n"
           "\n"
           "ubce_kibq3u0ets17vlm92g1uecr9m_uo92jvkj92\n"
           "\n"
           "ammy7e927v0gxw8fcfq3_fj24na65uaja0hsjvtsd\n"
           "\n"
           "uzpmq3ecx2fuq3aaq3q3h2tvl_u2u1r9q3aq3uu0y\n"
           "\n"
           "gy7pqx4n16hr965n2016hhi7w8r9ufn16tl2unfqw\n"
           "\n"
           "8ay2dim16a0ahiihvcaycini2doqzm16r90nxn65n\n"
           "\n"
           "x65squw7cuzr9r9kscjv_16jw07sp_xfkupx7_r9c\n"
           "\n"
           "bzovpsbwyi065ume650aanyiaqr9o2momq16ldf7p\n"
           "\n"
           "r9ejqnytjftckly7kz00sdupl16makofxnac2jbbf\n"
           "\n"
           "tywdx70mvm0fvwogp55ggfeivpfiq5qlzcw55ee16\n"
           "\n"
           "lzclxkgq3lv5ysu0ig2nft75xq3016ooo0fg5vnop\n"
           "\n"
           "v2tjy_udsf_w7x_wloy7zn8f5ixdeyxbvq3lj5unc\n"
           "\n"
           "8fmtvjh16rr7rpcxo0wgg16llwcmz7lp_bg0w0p0e\n"
           "\n"
           "p16dntx16zjbq3prgtpd7bto8fhwknq3da5rbq3vr\n"
           "\n"
           "y8faiq3_lne16q35wlwpjp08fxbm16t5tiphu7z2p\n"
           "\n"
           "uhwghga8fyb0htul1wk5gpo1avwbti6xuv7q3rokn\n"
           "\n"
           "oas_5pvu8fq38fanwd0vzra15q3pxu7dopi68fa_s\n"
           "\n"
           "_xi6a8e8f_a8bea8wg7a8a81morlogp0mm5a8v1rw\n"
           "\n"
           "7bt_bzthsnza8xz5i6tbyuohtqswn5qek1uj3roj3\n"
           "\n"
           "7er8f08f4e5nhkna_nyi6oes8g7ae5o1puoyoyb0u\n"
           "\n"
           "1w5euswza8ra8a8nyz1ka8xuncumlsnzo7a80vkmj\n"
           "\n"
           "31oej3y8go07h8gtrqtdo5u0i6ubi68gj3hrut9k5")

# Lista Alfanumérica, contendo a String: " abcdefghijklmnopqrstuwxyz_0123456789 "
alfanum = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
           'w', 'x', 'y', 'z', '_', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

alfanum2 = [] # inicializando uma segunda lista incialmente vazia, que vai ser peenchida posteriormente no laço "FOR".

# Laço "FOR" para verificar em cada iteração/repetição, usando a Lista "alfanum", a quantidade  de vezes que cada
# caracter aparece dentro da variável "desafio", que contém nela o "texto embaralhado" do desafio proposto.
for an in alfanum:
    print(f'{an} = {desafio.count(an)}')
    alfanum2.append(desafio.count(an))# Usando o Laço For para Preencher a Lista "alfanum2" vazia com a quantidade de vezes que cada caracter aparece no texto embaralhado.

alfanum2.sort() # Organizando de forma crescente a Lista "alfanum2" que acabou de ser preenchida pelo "FOR" anterior.

print(alfanum2) # Através do print desta Lista 2, tomei como base para reordenar a String " abcdefghijklmnopqrstuwxyz_0123456789 "
                # E descobrir a Plavra-chave do Desafio! Excluindo os todos os caracteres após "_" (incluindo "_").


